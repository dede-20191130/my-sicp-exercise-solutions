#lang racket
(require compatibility/mlist)

(define table-records mcdr)
(define record-val mcdr)

(define (make-table)
  (define (lookup key-list tgt-table)
    (let ((record (massoc (car key-list) (table-records tgt-table))))
      (cond ((not record)false)
            ((null? (cdr key-list)) (record-val record))
            (else (lookup (cdr key-list) record)))))
       
  (define (insert! key-list value tgt-table)
    (define (organize-record kl value)
      (if (null? (cdr kl))
          (mcons (car kl) value)
          (mlist (car kl) (organize-record (cdr kl) value))))
    (let ((record (massoc (car key-list) (table-records tgt-table))))
      (if (null? (cdr key-list))
          (if record
              (set-mcdr! record value)
              (set-mcdr! tgt-table
                         (mcons (mcons (car key-list) value)
                                (table-records tgt-table))))
          (if record
              (insert! (cdr key-list) value record)
              (set-mcdr! tgt-table
                         (mcons (organize-record key-list value) (table-records tgt-table))))))
    'ok)
  (let ((local-table (mlist '*table*)))    
    (define (dispatch m)
      (cond ((eq? m 'lookup-proc) (λ (key-list) (lookup key-list local-table)))
            ((eq? m 'insert-proc!) (λ (key-list value) (insert! key-list value local-table)))
            (else (error "Unknown operation -- TABLE" m))))
    dispatch))

(define operation-table (make-table))
(define get (operation-table 'lookup-proc))
(define put (operation-table 'insert-proc!))

(put (list 'letters 'a) 97)
(put (list 'letters 'b) 98)
(put (list 'math '+) 43)
(put (list 'math '-) 45)
(put (list 'math '*) 42)
(get (list 'math '-))
(get (list 'letters 'b))
(get (list 'letters 'c))
(put (list 'letters 'letters-inner01-01 'aaa) 1001)
(put (list 'letters 'letters-inner01-01 'bbb) 1002)
(put (list 'letters 'letters-inner01-02 '_aaa) 1100)
(put (list 'letters 'letters-inner01-02 '_aaa) 1101)
(put (list 'letters 'letters-inner01-01 'letters-inner02-01 '__aaa) 2000)
(put (list 'letters 'letters-inner01-01 'letters-inner02-01 '__aaa) 2001)
(get (list 'letters 'letters-inner01-02))
(get (list 'letters 'letters-inner01-01 'bbb))
(get (list 'letters 'letters-inner01-01 'letters-inner02-01 '__aaa))
(put (list 'letters 'letters-inner01-01 'letters-inner02-01) 3000)